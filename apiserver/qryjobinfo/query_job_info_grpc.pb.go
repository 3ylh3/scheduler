// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: apiserver/qryjobinfo/query_job_info.proto

package qryjobinfo

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// QueryJobInfoClient is the client API for QueryJobInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QueryJobInfoClient interface {
	QueryJobInfo(ctx context.Context, in *QueryJobInfoRequest, opts ...grpc.CallOption) (*QueryJobInfoResponse, error)
}

type queryJobInfoClient struct {
	cc grpc.ClientConnInterface
}

func NewQueryJobInfoClient(cc grpc.ClientConnInterface) QueryJobInfoClient {
	return &queryJobInfoClient{cc}
}

func (c *queryJobInfoClient) QueryJobInfo(ctx context.Context, in *QueryJobInfoRequest, opts ...grpc.CallOption) (*QueryJobInfoResponse, error) {
	out := new(QueryJobInfoResponse)
	err := c.cc.Invoke(ctx, "/qryjobinfo.QueryJobInfo/QueryJobInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryJobInfoServer is the server API for QueryJobInfo service.
// All implementations must embed UnimplementedQueryJobInfoServer
// for forward compatibility
type QueryJobInfoServer interface {
	QueryJobInfo(context.Context, *QueryJobInfoRequest) (*QueryJobInfoResponse, error)
	mustEmbedUnimplementedQueryJobInfoServer()
}

// UnimplementedQueryJobInfoServer must be embedded to have forward compatible implementations.
type UnimplementedQueryJobInfoServer struct {
}

func (UnimplementedQueryJobInfoServer) QueryJobInfo(context.Context, *QueryJobInfoRequest) (*QueryJobInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryJobInfo not implemented")
}
func (UnimplementedQueryJobInfoServer) mustEmbedUnimplementedQueryJobInfoServer() {}

// UnsafeQueryJobInfoServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QueryJobInfoServer will
// result in compilation errors.
type UnsafeQueryJobInfoServer interface {
	mustEmbedUnimplementedQueryJobInfoServer()
}

func RegisterQueryJobInfoServer(s grpc.ServiceRegistrar, srv QueryJobInfoServer) {
	s.RegisterService(&QueryJobInfo_ServiceDesc, srv)
}

func _QueryJobInfo_QueryJobInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryJobInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryJobInfoServer).QueryJobInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qryjobinfo.QueryJobInfo/QueryJobInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryJobInfoServer).QueryJobInfo(ctx, req.(*QueryJobInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// QueryJobInfo_ServiceDesc is the grpc.ServiceDesc for QueryJobInfo service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QueryJobInfo_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "qryjobinfo.QueryJobInfo",
	HandlerType: (*QueryJobInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryJobInfo",
			Handler:    _QueryJobInfo_QueryJobInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apiserver/qryjobinfo/query_job_info.proto",
}
