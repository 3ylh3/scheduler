// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: apiserver/updatejob/update_job.proto

package updatejob

import (
	context "context"
	job "github.com/3ylh3/scheduler/apiserver/job"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UpdateJobClient is the client API for UpdateJob service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UpdateJobClient interface {
	UpdateJob(ctx context.Context, in *UpdateJobRequest, opts ...grpc.CallOption) (*job.JobInfo, error)
}

type updateJobClient struct {
	cc grpc.ClientConnInterface
}

func NewUpdateJobClient(cc grpc.ClientConnInterface) UpdateJobClient {
	return &updateJobClient{cc}
}

func (c *updateJobClient) UpdateJob(ctx context.Context, in *UpdateJobRequest, opts ...grpc.CallOption) (*job.JobInfo, error) {
	out := new(job.JobInfo)
	err := c.cc.Invoke(ctx, "/updatejob.UpdateJob/UpdateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpdateJobServer is the server API for UpdateJob service.
// All implementations must embed UnimplementedUpdateJobServer
// for forward compatibility
type UpdateJobServer interface {
	UpdateJob(context.Context, *UpdateJobRequest) (*job.JobInfo, error)
	mustEmbedUnimplementedUpdateJobServer()
}

// UnimplementedUpdateJobServer must be embedded to have forward compatible implementations.
type UnimplementedUpdateJobServer struct {
}

func (UnimplementedUpdateJobServer) UpdateJob(context.Context, *UpdateJobRequest) (*job.JobInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateJob not implemented")
}
func (UnimplementedUpdateJobServer) mustEmbedUnimplementedUpdateJobServer() {}

// UnsafeUpdateJobServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UpdateJobServer will
// result in compilation errors.
type UnsafeUpdateJobServer interface {
	mustEmbedUnimplementedUpdateJobServer()
}

func RegisterUpdateJobServer(s grpc.ServiceRegistrar, srv UpdateJobServer) {
	s.RegisterService(&UpdateJob_ServiceDesc, srv)
}

func _UpdateJob_UpdateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpdateJobServer).UpdateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/updatejob.UpdateJob/UpdateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpdateJobServer).UpdateJob(ctx, req.(*UpdateJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UpdateJob_ServiceDesc is the grpc.ServiceDesc for UpdateJob service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UpdateJob_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "updatejob.UpdateJob",
	HandlerType: (*UpdateJobServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateJob",
			Handler:    _UpdateJob_UpdateJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apiserver/updatejob/update_job.proto",
}
